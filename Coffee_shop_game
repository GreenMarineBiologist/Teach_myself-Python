#This is the start of a game I am creating
#I will be adding to this regularly
#This will be incomplete, I do not recommend trying to run this until it is complete
#(it will be very boring)
#if you happen to come across this and you're curious, please feel free to leave comments
#especially if I haven't quite figured it out yet

class Scene(object):

    def enter(self):
        print("This scene is not yet configured")
        print("Subclass it and implement enter().")
        exit(1)

class Engine(object):

    def __init__(self, coffee_shop):
        self.coffee_shop = coffee_shop

    def play(self):
        current_scene = self.coffee_shop.opening_scene()
        final_scene = self.coffee_shop.next_scene('finished')

        while current_scene != final_scene:
            next_current_choice = current_scene.enter()
            current_scene = self.coffee_shop.next_scene(next_current_choice)

class AngeryCustomer(Scene):
#Acts as an ENDGAME
    comments = [
            "How could you mess it up?",

            "It's not that hard",

            "I'm never coming here again!",

            "You're such a theb!!",
    ]

    def enter(self):

        print(AngeryCustomer.comments[randint(0, 2)])

        exit(1)
#important to exit or will be looping

class Customer(Scene):

     def enter(self):
         print("\t*Hi Barista*")
         print("\t*What is on your menu?*")


class Barista(Scene):

    def enter(self):
        print("You are a barista working in a coffee shop")
        print("A customer has entered")
        print("\t*Hi there, what is your name*")
        name = input("> ")
        print(f"Great to meet you {name}")

opening = Barista()
opening.enter()

response = Customer()
response.enter()

class CoffeeSize (Scene):

    print("We have 3 sizes of cup for your coffee")

    def small(self):
        print("Small")

    def medium(self):
        print("Medium")

    def large(self):
        print("Large")

print (CoffeeSize)

class CoffeeChoice(Scene):

    def flatwhite(self):
        print("Flat white")

    def americano(self):
        print("Americano")

    def cortado(self):
        print("Cortado")

    def latte(self):
        print("Latte")

    def mocha(self):
        print("Mocha")

choice = CoffeeChoice()
print("You inform the customer that on the menu you have...")
choice.flatwhite()
choice.americano()
choice.cortado()
choice.latte()
choice.mocha()

#name = Barista().name()
#Barista object has no 'name' attribute
#Figure this out
#will not run past this point

coffee_choice = input(f"""The customer chooses:
> """)
#will be input() {name} chooses:

if coffee_choice == "flat white":
    print(f"You have chosen a {coffee_choice}")
#put in a size scene here (would you like S, M, L)
elif coffee_choice == "americano":
    print(f"You have chosen a {coffee_choice}")
#and here
elif coffee_choice == "cortado":
    print(f"You have chosen {coffee_choice}")

elif coffee_choice == "latte":
    print(f"You have chosen {coffee_choice}")

elif coffee_choice == "mocha":
    print(f"Sorry, we have run out of {coffee_choice}")
    print("Please choose something else")
#Put a loop in here so it goes back to coffee_choice input()
#if mocha is typed again maybe loop to AngeryCustomer?
#or add class ANGERYBarista
else:
    print("We don't have that on the menu, please try again")
